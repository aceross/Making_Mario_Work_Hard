\begin{thebibliography}{10}

\bibitem{Aloupis2012}
G.~Aloupis, E.~D. Demaine, and A.~Guo.
\newblock Classic {N}intendo games are ({NP}-){H}ard.
\newblock {\em CoRR}, abs/1203.1895, 2012.

\bibitem{audemard2009glucose}
G.~Audemard and L.~Simon.
\newblock Glucose: a solver that predicts learnt clauses quality.
\newblock {\em SAT Competition}, pages 7--8, 2009.

\bibitem{balyo2010solving}
T.~Balyo.
\newblock {\em Solving Boolean satisfiability problems}.
\newblock PhD thesis, Charles University, Prague, 2010.

\bibitem{biere2009conflict}
A.~Biere, M.~Heule, H.~van Maaren, and T.~Walsh.
\newblock Conflict-driven clause learning sat solvers.
\newblock {\em Handbook of Satisfiability, Frontiers in Artificial Intelligence
  and Applications}, pages 131--153, 2009.

\bibitem{browne2008automatic}
C.~Browne.
\newblock {\em Automatic generation and evaluation of recombination games}.
\newblock PhD thesis, Queensland University of Technology, 2008.

\bibitem{brummayer2010automated}
R.~Brummayer, F.~Lonsing, and A.~Biere.
\newblock Automated testing and debugging of {SAT} and {QBF} solvers.
\newblock In {\em Theory and Applications of Satisfiability Testing--SAT 2010},
  pages 44--57. Springer, 2010.

\bibitem{Burgun:2012}
K.~Burgun.
\newblock {\em Game Design Theory: A New Philosophy for Understanding Games}.
\newblock Taylor \& Francis, 2012.

\bibitem{compton2006procedural}
K.~Compton and M.~Mateas.
\newblock Procedural level design for platform games.
\newblock In {\em AIIDE}, pages 109--111, 2006.

\bibitem{cook1971complexity}
S.~A. Cook.
\newblock The complexity of theorem-proving procedures.
\newblock In {\em Proceedings of the third annual ACM symposium on Theory of
  computing}, pages 151--158. ACM, 1971.

\bibitem{cook1984can}
S.~A. Cook.
\newblock Can computers routinely discover mathematical proofs?
\newblock {\em Proceedings of the American Philosophical Society}, pages
  40--43, 1984.

\bibitem{culberson1999sokoban}
J.~Culberson.
\newblock Sokoban is {PSPACE}-complete.
\newblock In {\em Proceedings in Informatics}, volume~4, pages 65--76, 1999.

\bibitem{davis1962machine}
M.~Davis, G.~Logemann, and D.~Loveland.
\newblock A machine program for theorem-proving.
\newblock {\em Communications of the ACM}, 5(7):394--397, 1962.

\bibitem{demaine2001playing}
E.~D. Demaine.
\newblock Playing games with algorithms: Algorithmic combinatorial game theory.
\newblock In {\em Mathematical Foundations of Computer Science 2001}, pages
  18--33. Springer, 2001.

\bibitem{demaine2000pushpush}
E.~D. Demaine, M.~L. Demaine, and J.~O'Rourke.
\newblock Push{P}ush and {P}ush-1 are {NP}-hard in {2}d.
\newblock {\em arXiv preprint cs/0007021}, 2000.

\bibitem{demaine2002push}
E.~D. Demaine, R.~A. Hearn, and M.~Hoffmann.
\newblock Push-2-f is {PSPACE}-complete.
\newblock In {\em CCCG}, pages 31--35, 2002.

\bibitem{demaine2003tetris}
E.~D. Demaine, S.~Hohenberger, and D.~Liben-Nowell.
\newblock Tetris is hard, even to approximate.
\newblock In {\em Computing and Combinatorics}, pages 351--363. Springer, 2003.

\bibitem{devlin2002millennium}
K.~Devlin.
\newblock {\em The Millennium Problems: The Seven Greatest Unsolved
  Mathematical Puzzles of Our Time}.
\newblock Basic Books, 2002.

\bibitem{dor1999sokoban}
D.~Dor and U.~Zwick.
\newblock Sokoban and other motion planning problems.
\newblock {\em Computational Geometry}, 13(4):215--228, 1999.

\bibitem{dormans2010adventures}
J.~Dormans.
\newblock Adventures in level design: generating missions and spaces for action
  adventure games.
\newblock In {\em Proceedings of the 2010 workshop on procedural content
  generation in games}, page~1. ACM, 2010.

\bibitem{dormans2011generating}
J.~Dormans and S.~Bakkes.
\newblock Generating missions and spaces for adaptable play experiences.
\newblock {\em Computational Intelligence and AI in Games, IEEE Transactions
  on}, 3(3):216--228, 2011.

\bibitem{du2011theory}
D.-Z. Du and K.-I. Ko.
\newblock {\em Theory of computational complexity}, volume~58.
\newblock John Wiley \& Sons, 2011.

\bibitem{esfahbod:euler}
B.~Esfahbod.
\newblock Euler diagram for {P}, {NP}, {NP}-complete, and {NP}-hard problem.
\newblock
  \url{http://commons.wikimedia.org/wiki/File:P_np_np-complete_np-hard.svg},
  2011.
\newblock This file is licensed under the Creative Commons Attribution-Share
  Alike 3.0 Unported and 2.5 Generic and 2.0 Generic and 1.0 Generic license.

\bibitem{DBLP:conf/fun/Forisek10}
M.~Fori{\v{s}}ek.
\newblock Computational complexity of two-dimensional platform games.
\newblock In {\em Fun with Algorithms, 5th International Conference, {FUN}
  2010, Ischia, Italy, June 2-4, 2010. Proceedings}, pages 214--227, 2010.

\bibitem{Gasarch:2012:GCS:2261417.2261434}
W.~I. Gasarch.
\newblock Guest {C}olumn: The {S}econd {P} =?{NP} {P}oll.
\newblock {\em SIGACT News}, 43(2):53--77, June 2012.

\bibitem{Goldberg20071549}
E.~Goldberg and Y.~Novikov.
\newblock Berkmin: A fast and robust sat-solver.
\newblock {\em Discrete Applied Mathematics}, 155(12):1549 -- 1561, 2007.
\newblock \{SAT\} 2001, the Fourth International Symposium on the Theory and
  Applications of Satisfiability Testing.

\bibitem{Goldreich:2008}
O.~Goldreich.
\newblock {\em Computational Complexity: A Conceptual Perspective}.
\newblock Cambridge University Press, New York, NY, USA, 1 edition, 2008.

\bibitem{gomes2008satisfiability}
C.~P. Gomes, H.~Kautz, A.~Sabharwal, and B.~Selman.
\newblock Satisfiability solvers.
\newblock {\em Foundations of Artificial Intelligence}, 3:89--134, 2008.

\bibitem{gomes1998boosting}
C.~P. Gomes, B.~Selman, H.~Kautz, et~al.
\newblock Boosting combinatorial search through randomization.
\newblock {\em AAAI/IAAI}, 98:431--437, 1998.

\bibitem{Gregory:2009}
J.~Gregory.
\newblock {\em Game Engine Architecture}.
\newblock Taylor \& Francis Ltd., {F}irst edition, 2009.

\bibitem{DBLP:journals/corr/GualaLN14}
L.~Gual{\`{a}}, S.~Leucci, and E.~Natale.
\newblock Bejeweled, candy crush and other match-three games are (np-)hard.
\newblock {\em CoRR}, abs/1403.5830, 2014.

\bibitem{nikki}
S.~Hahn.
\newblock \textit{NIkki and the {R}obots}.
\newblock \url{https://github.com/nikki-and-the-robots}, 2012.
\newblock Date Accessed: 2015-04-28.

\bibitem{Hendrikx:2013:PCG:2422956.2422957}
M.~Hendrikx, S.~Meijer, J.~Van Der~Velden, and A.~Iosup.
\newblock Procedural content generation for games: A survey.
\newblock {\em ACM Trans. Multimedia Comput. Commun. Appl.}, 9(1):1:1--1:22,
  Feb. 2013.

\bibitem{jennings2010polymorph}
M.~Jennings-Teats, G.~Smith, and N.~Wardrip-Fruin.
\newblock Polymorph: dynamic difficulty adjustment through level generation.
\newblock In {\em Proceedings of the 2010 Workshop on Procedural Content
  Generation in Games}, page~11. ACM, 2010.

\bibitem{jeroslow1990solving}
R.~G. Jeroslow and J.~Wang.
\newblock Solving propositional satisfiability problems.
\newblock {\em Annals of mathematics and Artificial Intelligence},
  1(1-4):167--187, 1990.

\bibitem{katebi2011empirical}
H.~Katebi, K.~A. Sakallah, and J.~P. Marques-Silva.
\newblock Empirical study of the anatomy of modern sat solvers.
\newblock In {\em Theory and Applications of Satisfiability Testing-SAT 2011},
  pages 343--356. Springer, 2011.

\bibitem{kaye2000minesweeper}
R.~Kaye.
\newblock Minesweeper is {NP}-complete.
\newblock {\em The Mathematical Intelligencer}, 22(2):9--15, 2000.

\bibitem{kendall2008survey}
G.~Kendall, A.~J. Parkes, and K.~Spoerer.
\newblock A survey of {NP}-complete puzzles.
\newblock {\em ICGA Journal}, 31(1):13--34, 2008.

\bibitem{kottler2010sat}
S.~Kottler.
\newblock Sat solving with reference points.
\newblock In {\em Theory and Applications of Satisfiability Testing--SAT 2010},
  pages 143--157. Springer, 2010.

\bibitem{levin1973universal}
L.~A. Levin.
\newblock Universal sequential search problems.
\newblock {\em Problemy Peredachi Informatsii}, 9(3):115--116, 1973.

\bibitem{marques1999impact}
J.~Marques-Silva.
\newblock The impact of branching heuristics in propositional satisfiability
  algorithms.
\newblock In {\em Progress in Artificial Intelligence}, pages 62--74. Springer,
  1999.

\bibitem{marques1999grasp}
J.~P. Marques-Silva and K.~A. Sakallah.
\newblock {GRASP}: A search algorithm for propositional satisfiability.
\newblock {\em Computers, IEEE Transactions on}, 48(5):506--521, 1999.

\bibitem{mawhorter2010procedural}
P.~Mawhorter and M.~Mateas.
\newblock Procedural level generation using occupancy-regulated extension.
\newblock In {\em Computational Intelligence and Games (CIG), 2010 IEEE
  Symposium on}, pages 351--358. IEEE, 2010.

\bibitem{Miller:1986:DRT:15886.15890}
G.~S.~P. Miller.
\newblock The definition and rendering of terrain maps.
\newblock {\em SIGGRAPH Comput. Graph.}, 20(4):39--48, Aug. 1986.

\bibitem{moskewicz2001chaff}
M.~W. Moskewicz, C.~F. Madigan, Y.~Zhao, L.~Zhang, and S.~Malik.
\newblock Chaff: Engineering an efficient {SAT} solver.
\newblock In {\em Proceedings of the 38th annual Design Automation Conference},
  pages 530--535. ACM, 2001.

\bibitem{mourato2011automatic}
F.~Mourato, M.~P. dos Santos, and F.~Birra.
\newblock Automatic level generation for platform videogames using genetic
  algorithms.
\newblock In {\em Proceedings of the 8th International Conference on Advances
  in Computer Entertainment Technology}, page~8. ACM, 2011.

\bibitem{nadel2002jerusat}
A.~Nadel.
\newblock The jerusat {SAT} solver.
\newblock {\em Master's thesis, Hebrew University of Jerusalem}, 2002.

\bibitem{Nadel:2010:ASS:2164073.2164111}
A.~Nadel and V.~Ryvchin.
\newblock Assignment stack shrinking.
\newblock In {\em Proceedings of the 13th International Conference on Theory
  and Applications of Satisfiability Testing}, SAT'10, pages 375--381, Berlin,
  Heidelberg, 2010. Springer-Verlag.

\bibitem{o1999pushpush}
J.~O'Rourke and T.~Group.
\newblock Push{P}ush is {NP}-hard in {3D}.
\newblock {\em arXiv preprint cs/9911013}, 1999.

\bibitem{Papadimitriou:2003:CC:1074100.1074233}
C.~H. Papadimitriou.
\newblock Computational complexity.
\newblock In {\em Encyclopedia of Computer Science}, pages 260--265. John Wiley
  and Sons Ltd., Chichester, UK.

\bibitem{papadimitriou2003computational}
C.~H. Papadimitriou.
\newblock {\em Computational complexity}.
\newblock John Wiley and Sons Ltd., 2003.

\bibitem{supermaryo}
F.~Richter.
\newblock \textit{Secret {M}aryo {C}hronicles}.
\newblock \url{http://www.secretmaryo.org}, 2013.
\newblock Date Access: 2015-04-27.

\bibitem{shaker2010towards}
N.~Shaker, G.~N. Yannakakis, and J.~Togelius.
\newblock Towards automatic personalized content generation for platform games.
\newblock In {\em AIIDE}, 2010.

\bibitem{sipser2012introduction}
M.~Sipser.
\newblock {\em Introduction to the Theory of Computation}.
\newblock Cengage Learning, 2012.

\bibitem{Smith:2008:FAP:1401843.1401858}
G.~Smith, M.~Cha, and J.~Whitehead.
\newblock A framework for analysis of 2d platformer levels.
\newblock In {\em Proceedings of the 2008 ACM SIGGRAPH Symposium on Video
  Games}, Sandbox '08, pages 75--80, New York, NY, USA, 2008. ACM.

\bibitem{Smith:2009:RLG:1536513.1536548}
G.~Smith, M.~Treanor, J.~Whitehead, and M.~Mateas.
\newblock Rhythm-based level generation for 2d platformers.
\newblock In {\em Proceedings of the 4th International Conference on
  Foundations of Digital Games}, FDG '09, pages 175--182, New York, NY, USA,
  2009. ACM.

\bibitem{smith2011tanagra}
G.~Smith, J.~Whitehead, and M.~Mateas.
\newblock Tanagra: Reactive planning and constraint solving for
  mixed-initiative level design.
\newblock {\em Computational Intelligence and AI in Games, IEEE Transactions
  on}, 3(3):201--215, 2011.

\bibitem{sorenson2011generic}
N.~Sorenson, P.~Pasquier, and S.~DiPaola.
\newblock A generic approach to challenge modeling for the procedural creation
  of video game levels.
\newblock {\em Computational Intelligence and AI in Games, IEEE Transactions
  on}, 3(3):229--244, 2011.

\bibitem{sorensson2005minisat}
N.~Sorensson and N.~Een, N.n.
\newblock Minisat v1. 13-a sat solver with conflict-clause minimization.
\newblock {\em SAT}, 2005:53, 2005.

\bibitem{srinivas1994genetic}
M.~Srinivas and L.~M. Patnaik.
\newblock Genetic algorithms: A survey.
\newblock {\em Computer}, 27(6):17--26, 1994.

\bibitem{stallman1977forward}
R.~M. Stallman and G.~J. Sussman.
\newblock Forward reasoning and dependency-directed backtracking in a system
  for computer-aided circuit analysis.
\newblock {\em Artificial intelligence}, 9(2):135--196, 1977.

\bibitem{togelius2007towards}
J.~Togelius, R.~De~Nardi, and S.~M. Lucas.
\newblock Towards automatic personalised content creation for racing games.
\newblock In {\em Computational Intelligence and Games, 2007. CIG 2007. IEEE
  Symposium on}, pages 252--259. IEEE, 2007.

\bibitem{5035629}
J.~Togelius and J.~Schmidhuber.
\newblock An experiment in automatic game design.
\newblock In {\em Computational Intelligence and Games, 2008. CIG '08. IEEE
  Symposium On}, pages 111--118, Dec 2008.

\bibitem{5756645}
J.~Togelius, G.~Yannakakis, K.~Stanley, and C.~Browne.
\newblock Search-based procedural content generation: A taxonomy and survey.
\newblock {\em Computational Intelligence and AI in Games, IEEE Transactions
  on}, 3(3):172--186, Sept 2011.

\bibitem{tseitin1983complexity}
G.~S. Tseitin.
\newblock On the complexity of derivation in propositional calculus.
\newblock In {\em Automation of reasoning}, pages 466--483. Springer, 1983.

\bibitem{viglietta2014gaming}
G.~Viglietta.
\newblock Gaming is a hard job, but someone has to do it!
\newblock {\em Theory of Computing Systems}, 54(4):595--621, 2014.

\bibitem{6424299}
A.~Zafar and H.~Mujtaba.
\newblock Identifying catastrophic failures in offline level generation for
  mario.
\newblock In {\em Frontiers of Information Technology (FIT), 2012 10th
  International Conference on}, pages 62--67, Dec 2012.

\bibitem{zhang1997sato}
H.~Zhang.
\newblock Sato: An efficient prepositional prover.
\newblock In {\em Automated Deduction—CADE-14}, pages 272--275. Springer,
  1997.

\bibitem{zhang2002quest}
L.~Zhang and S.~Malik.
\newblock The quest for efficient {B}oolean satisfiability solvers.
\newblock In {\em Computer Aided Verification}, pages 17--36. Springer, 2002.

\end{thebibliography}
