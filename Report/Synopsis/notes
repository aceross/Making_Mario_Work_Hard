NP-completeness is based on the notion of a \textit{reduction}, which is a relation between computational problems. One computational problem is reducible to another problem if it is possible to efficiently solve the first one when provided with an efficient algorithm for solving the other. A problem in NP is determined to be NP complete if any problem in NP is reducible to it. 



The theory of  The P vs NP question refers to search problems to which there exists an efficient algorithm that given a solution to a given instance determines whether or not the solution is correct. 

Although any given solution to an NP-complete problem can be verified quickly (in polynomial time), there is no known efficient way to locate a solution in the first place; indeed, the most notable characteristic of NP-complete problems is that no fast solution to them is known. That is, the time required to solve the problem using any currently known algorithm increases very quickly as the size of the problem grows. As a consequence, determining whether or not it is possible to solve these problems quickly, called the P versus NP problem, is one of the principal unsolved problems in computer science today.

There has been an increasing amount of work on the topic of the computational complexity of computer games (see for example the survey of http://arxiv.org/abs/cs/0106019). In particular, many single player computer games have been proven to be computationally hard in general. In particular, many single player games have been proven to be NP-Complete including Minesweeper, Tetris, Mario (and many other platform games), Flood-it, Candy Crush Saga and many others. 

This project concerns the complexity of Mario which is known to be NP-Complete. To prove this it was shown that Mario could be forced to solve an (arbitrary) instance of the satisfying assignment problem (called SAT) - this is called a reduction. The aim of this project is to implement a simple platform game and a level generator. The level generator should take an input to the SAT problem and convert it into a Mario level. The project should also include an AI player which can play these levels by choosing a suitable path using an existing SAT solver. 

The goal is to demonstrate basic concepts from computational complexity such as NP-completeness and reductions using a visual medium.
